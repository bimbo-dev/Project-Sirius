@model Sirius.Web.Models.DepartmentViewModel

@section styles{
    @Styles.Render("~/DataTable/css")
    @Styles.Render("~/toastr/css")
    @Styles.Render("~/sweetalert/css")
}

@{
    ViewBag.Title = "Department";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    ViewBag.PageHeader = "Departments";
    ViewBag.Active = "m_departmentsettings";
}


<div class="box box-warning collapsed-box">
    <div class="box-header with-border">
        <h2 class="box-title">Add Department(s)</h2>
        <div class="box-tools pull-right">
            <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i></button>
        </div>
    </div>
    <div class="box-body">
        <div class="dept-form">
            @using (Ajax.BeginForm("AddDepartment", "Admin", null, new AjaxOptions()
                    {
                        OnBegin = "onBegin",
                        OnComplete = "onComplete",
                        OnFailure = "onFailure",
                        OnSuccess = "onSuccess",
                        HttpMethod = "Post",
                        InsertionMode = InsertionMode.Replace
                    }, new { @class = "addDeptForm" }))
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-sm-3">
                        <label>Department Name<small>(required)</small>:</label>
                    </div>
                    <div class="col-sm-3">
                        <label>Short Name<small>(required)</small>:</label>
                    </div>
                    <div class="col-sm-5">
                        <label>Description:</label>
                    </div>
                </div>
                <div class="deptinputs">
                    <div class="row add-form">
                        <input type="hidden" name="AddModel.Index" value="0" />
                        <div class="col-sm-3 form-group">
                            <input name="AddModel[0].Name" class="form-control" type="text" placeholder="Department Name..." data-val="true" data-val-required="*Required">
                            <span class="field-validation-valid text-danger" data-valmsg-for="AddModel[0].Name" data-valmsg-replace="true"></span>
                        </div>
                        <div class="col-sm-3 form-group">
                            <input name="AddModel[0].Shortname" class="form-control" type="text" placeholder="Short Name or Abbrev..." data-val="true" data-val-required="*Required">
                            <span class="field-validation-valid text-danger" data-valmsg-for="AddModel[0].Shortname" data-valmsg-replace="true"></span>
                        </div>
                        <div class="col-sm-5 form-group">
                            <input name="AddModel[0].Description" class="form-control" type="text" placeholder="Brief Description of Department...">
                        </div>
                        <a class="btn btn-success" id="addbutton"><i class="fa fa-plus"></i></a>
                    </div>
                </div>
                <div class="">
                    <a id="addDepartmentButton" class="btn btn-success" onclick="$(this).closest('form').submit()">SUBMIT</a>
                </div>
            }
        </div>
    </div>
</div>

<div id="deptListDiv" class="box box-success">
    <div class="box-header with-border">
        <h2 class="box-title">Departments</h2>
    </div>
    <div class="box-body table-responsive" id="departmentList-Body">
    </div>
</div>

@section scripts{
    @Scripts.Render("~/DataTable/js")
    @Scripts.Render("~/toastr/js")
    @Scripts.Render("~/sweetalert/js")
    <script type="text/javascript">

    $(document).ready(function () {
        loadDepartmentList();

        var x = 1;
        var max = 10;
        $("#addbutton").click(function () {
            if (x < max) {
                var newdiv = $('<div class="row add-form"><input type="hidden" name="AddModel.Index" value="' + x + '" /><div class="col-sm-3 form-group"><input name="AddModel[' + x + '].Name" class="form-control" type="text" placeholder="Department Name..." data-val="true" data-val-required="*Required"><span class="field-validation-valid text-danger" data-valmsg-for="AddModel[' + x + '].Name" data-valmsg-replace="true"></span></div><div class="col-sm-3 form-group"><input name="AddModel[' + x + '].Shortname" class="form-control" type="text" placeholder="Short Name or Abbrev..."  data-val="true" data-val-required="*Required"><span class="field-validation-valid text-danger" data-valmsg-for="AddModel[' + x + '].Shortname" data-valmsg-replace="true"></span></div><div class="col-sm-5 form-group"><input name="AddModel[' + x + '].Description" class="form-control" type="text" placeholder="Brief Description of Department..." data-val="true"></div><a class="btn btn-danger" id="removebutton"><i class="fa fa-times"></i></a></div>').hide();
                $(".deptinputs").append(newdiv);
                newdiv.fadeIn();
                x++;
            }
            return false;
        });
        $(".deptinputs").on("click","#removebutton", function(){
            $(this).parent('div').fadeOut("slow", function(){
                $(this).remove();
                x--;
            });
        });

        $(document).on('click', 'a#deleteDept', function (e) {
            var deleteUrl = $(this).attr('data-href');
            e.preventDefault()
            swal({
                title: "Are you sure?",
                text: "Department will be deleted",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Delete",
                cancelButtonText: "Cancel",
                closeOnConfirm: false,
                closeOnCancel: true
            },
             function(isConfirm){
                 if (isConfirm) {
                     $.ajax({
                        url: deleteUrl,
                        dataType: "json",
                        type: "POST",
                        beforeSend: function () {
                            swal({
                                title: "Processing......",
                                showConfirmButton: false,
                                animation: false
                            });
                        },
                        success: function(data){
                            if (data.Successful) {
                                swal("Deleted!", "This department was deleted successfully.", "success")
                            }
                            else
                                swal("Error", "Error deleting department", "error")
                        },
                        error: swal("Error", "Error deleting department", "error")
                    })
                }
                });
            });
        });

        function onBegin() {
            $('#addDepartmentButton').attr('disabled', 'disabled');
        }
        function onComplete() {
            $('#addDepartmentButton').removeAttr('disabled');
        }
        function onSuccess(response) {
            if (response.Successful) {
                toastr.success(response.Html);
                $(this).closest('form').trigger("reset");
                setTimeout(function () {
                    window.location.reload(true);
                }, 1500);
            }
            else {
                toastr.error(response.Html);
            }
        }
        function onFailure() {
            toastr.error("Something went wrong, please try again.");
        }

        function updateDepartmentBegin() {
            $('#editDeptButton').attr('disabled', 'disabled');
        }
        function updateDepartmentComplete() {
            $('#editDeptButton').removeAttr('disabled');
        }
        function updateDepartmentSuccess(response) {
            if (response.Successful) {
                toastr.success(response.Html);
                $('.modal').modal('hide');
                setTimeout(function () {
                    window.location.reload(true);
                }, 1500);
            }
            else {
                toastr.error("Please fill all required fields.");
            }
        }

        function updateDepartmentFailure() {
            toastr.error("Something went wrong, please try again.");
        }

        function loadDepartmentList() {
            var url = '@Url.Action("DepartmentsInOrganization", "Admin")';
            $.ajax({
                url: url,
                contentType: 'application/html; charset=utf-8',
                dataType: "html",
                type: "GET",
                cache: false,
                tryCount: 0,
                retryLimit: 3,
                beforeSend: function () {
                    $('#departmentList-Body').html('<div class="col-md-12" style="height:50px;"><div class="overlay"><i class="fa fa-refresh fa-spin"></i></div></div>');
                },
                success: function (data) {
                    $('#departmentList-Body').html(data);
                    DrawDepartmentDataTable();
                },
                error: function () {
                    this.tryCount++;
                    if (this.tryCount <= this.retryLimit) {
                        //try again
                        $.ajax(this);
                        return;
                    }
                    else {
                        $('#departmentList-Body').html('<div class="col-md-12"><h4>An error occured, please reload this page.</h4></div>');
                    }
                }
            });
        }

        function DrawDepartmentDataTable() {
            $("#deptlist").DataTable({
                "bInfo": false,
                "ordering": false,
                "columnDefs": [
                  {
                      "searchable": false, "targets": [1, 2]
                  }
                ]
            });
        }
    </script>
}





